plugins {
    id 'java-library'
    id 'com.vanniktech.maven.publish'
}

group = 'jp.vemi'
version = '1.0.0'

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    api project(':lib')
    api 'org.springframework.boot:spring-boot-autoconfigure:3.2.2'
    api 'org.springframework:spring-context:6.1.3'
    api 'org.springframework:spring-beans:6.1.3'
    api 'org.mybatis:mybatis-spring:3.0.3'

    // Align Spring 6.x
    implementation 'org.springframework:spring-tx:6.1.3'
    implementation 'org.springframework:spring-jdbc:6.1.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.h2database:h2:2.2.224'
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.named('test') {
    // Use JUnit Platform and bridge junitTags (-P / -D) to includeTags like :lib
    useJUnitPlatform {
        def prop = System.getProperty('junitTags') ?: (project.hasProperty('junitTags') ? project.property('junitTags') : null)
        if (prop) {
            def tags = prop.toString().split(',').collect { it.trim() }.findAll { it }
            if (!tags.isEmpty()) {
                includeTags(tags as String[])
            }
        }
    }
    // Configure to not fail when no tests are discovered
    filter {
        setFailOnNoMatchingTests(false)
    }
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('Xmaxwarns', '1')
    options.addBooleanOption('allow-script-in-comments', true)
    failOnError = false
}

// Vanniktech Maven Publish Plugin - Central Portal 設定
import com.vanniktech.maven.publish.SonatypeHost

mavenPublishing {
    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)
    signAllPublications()
    coordinates("jp.vemi", "seasar-batis-spring", project.version as String)
    pom {
        name.set("SeasarBatis Spring Integration")
        description.set("Spring Framework integration module for SeasarBatis")
        url.set("https://github.com/vemikrs/seasar-batis")
        licenses {
            license {
                name.set("The Apache License, Version 2.0")
                url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
            }
        }
        developers {
            developer {
                id.set("vemikrs")
                name.set("Hiroki Kurosawa")
                email.set("contact@vemi.jp")
            }
        }
        scm {
            connection.set("scm:git:git://github.com/vemikrs/seasar-batis.git")
            developerConnection.set("scm:git:ssh://git@github.com/vemikrs/seasar-batis.git")
            url.set("https://github.com/vemikrs/seasar-batis")
        }
    }
}