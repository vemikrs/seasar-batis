plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'jp.vemi'
version = '1.0.0'

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    api project(':lib')
    api 'org.springframework.boot:spring-boot-autoconfigure:3.2.2'
    api 'org.springframework:spring-context:6.1.3'
    api 'org.springframework:spring-beans:6.1.3'
    api 'org.mybatis:mybatis-spring:3.0.3'
    api 'org.mybatis:mybatis-spring:3.0.2'
    
    implementation 'org.springframework:spring-tx:5.3.29'
    implementation 'org.springframework:spring-jdbc:5.3.29'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
    testImplementation 'com.h2database:h2:2.2.224'
}

// Generate sources and javadoc jars
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('Xmaxwarns', '1')
    failOnError = false
}

// Maven publishing configuration
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            
            groupId = 'jp.vemi'
            artifactId = 'seasar-batis-spring'
            version = project.version
            
            // Generate sources jar
            artifact sourcesJar
            // Generate javadoc jar
            artifact javadocJar
            
            pom {
                name = 'SeasarBatis Spring Integration'
                description = 'Spring Framework integration module for SeasarBatis'
                url = 'https://github.com/vemic/seasar-batis'
                
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                
                developers {
                    developer {
                        id = 'vemic'
                        name = 'vemic'
                        email = 'vemic@vemi.jp'
                    }
                }
                
                scm {
                    connection = 'scm:git:git://github.com/vemic/seasar-batis.git'
                    developerConnection = 'scm:git:ssh://github.com:vemic/seasar-batis.git'
                    url = 'https://github.com/vemic/seasar-batis'
                }
            }
        }
    }
}

// Signing configuration
signing {
    required { gradle.taskGraph.hasTask("publishToSonatype") }
    
    def signingKeyId = System.getenv("SIGNING_KEY_ID")
    def signingPassword = System.getenv("SIGNING_PASSWORD")
    def signingSecretKey = System.getenv("SIGNING_SECRET_KEY")
    
    if (signingKeyId && signingPassword && signingSecretKey) {
        useInMemoryPgpKeys(signingKeyId, signingSecretKey, signingPassword)
    }
    
    sign publishing.publications.maven
}