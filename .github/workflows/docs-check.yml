name: Docs - Javadoc Check

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  javadoc:
    name: Generate Javadoc (manual only)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      TZ: Asia/Tokyo
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Setup Gradle (cache enabled)
        uses: gradle/actions/setup-gradle@v4

      - name: Generate Gradle Wrapper
        run: |
          if [ ! -f gradle/wrapper/gradle-wrapper.jar ]; then
            echo "📥 (bootstrap) Generating Gradle wrapper via system Gradle only — project build uses ./gradlew (8.9)"
            GRADLE_VERSION=$(grep "distributionUrl" gradle/wrapper/gradle-wrapper.properties | sed 's/.*gradle-\(.*\)-bin.zip/\1/')
            echo "Target Gradle version: $GRADLE_VERSION"
            gradle -q wrapper --gradle-version "$GRADLE_VERSION" --no-daemon || gradle wrapper --gradle-version "$GRADLE_VERSION" --no-daemon --stacktrace
            test -s gradle/wrapper/gradle-wrapper.jar && echo "✅ Gradle wrapper jar generated" || (echo "❌ Failed to generate gradle-wrapper.jar" && exit 1)
          else
            echo "✅ Gradle wrapper already exists"
          fi

      - name: Verify Gradle
        run: ./gradlew --version

      - name: Run Javadoc tasks
        run: |
          # 失敗は build.gradle 側の failOnError 設定に従う。ここでは生成物の確認を主目的とする
          ./gradlew :lib:javadoc :spring:javadoc --no-daemon --warning-mode all

      - name: Upload Javadoc artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: javadoc-html
          path: |
            lib/build/docs/javadoc/**
            spring/build/docs/javadoc/**
          if-no-files-found: warn
          retention-days: 14
