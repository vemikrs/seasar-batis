name: Release to Maven Central

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Extract version from tag
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        echo "RELEASE_VERSION=$TAG_VERSION" >> $GITHUB_ENV
        
    - name: Use manual version
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "RELEASE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        
    - name: Update version in gradle files
      run: |
        sed -i "s/version = '[^']*'/version = '$RELEASE_VERSION'/" lib/build.gradle
        sed -i "s/version = '[^']*'/version = '$RELEASE_VERSION'/" spring/build.gradle
        
    - name: Import GPG key
      run: |
        echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode | gpg --batch --import
        
    - name: Build and test
      run: |
        ./gradlew clean build -x test
        
    - name: Publish to Maven Central
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        SIGNING_SECRET_KEY: ${{ secrets.SIGNING_SECRET_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        ./gradlew publishToSonatype closeSonatypeStagingRepository